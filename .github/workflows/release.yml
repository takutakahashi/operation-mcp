name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  release:
    name: Create Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.19'
          cache: true

      - name: Run tests
        run: make test

      - name: Set up GoReleaser
        uses: goreleaser/goreleaser-action@v4
        with:
          distribution: goreleaser
          version: latest
          install-only: true

      - name: Create .goreleaser.yml
        run: |
          cat > .goreleaser.yml << 'EOF'
          before:
            hooks:
              - go mod tidy
          builds:
            - id: operations
              main: ./cmd/operations/main.go
              binary: operations
              env:
                - CGO_ENABLED=0
              goos:
                - linux
                - darwin
              goarch:
                - amd64
                - arm64
              ldflags:
                - -s -w -X main.version={{.Version}} -X main.commit={{.Commit}} -X main.date={{.Date}}
          archives:
            - format: tar.gz
              name_template: >-
                {{ .ProjectName }}_
                {{- .Version }}_
                {{- .Os }}_
                {{- if eq .Arch "amd64" }}x86_64
                {{- else if eq .Arch "arm64" }}aarch64
                {{- else }}{{ .Arch }}{{ end }}
              format_overrides:
                - goos: windows
                  format: zip
          checksum:
            name_template: 'checksums.txt'
          snapshot:
            name_template: "{{ incpatch .Version }}-next"
          changelog:
            sort: asc
            filters:
              exclude:
                - '^docs:'
                - '^test:'
                - '^ci:'
                - '^chore:'
          EOF

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v4
        with:
          distribution: goreleaser
          version: latest
          args: release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Upload release artifacts
        uses: actions/upload-artifact@v4
        with:
          name: release-artifacts
          path: dist/
